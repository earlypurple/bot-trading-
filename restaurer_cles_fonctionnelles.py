#!/usr/bin/env python3
"""
üîÑ RESTAURATEUR DES CL√âS COINBASE FONCTIONNELLES
Ce script restaure les cl√©s API Coinbase fonctionnelles dans le dashboard
"""

import os
import shutil
import sys
import time
from datetime import datetime

# Chemins importants
PROJECT_DIR = "/Users/johan/ia_env/bot-trading-"
TRADING_BOT_DIR = os.path.join(PROJECT_DIR, "TradingBot_Pro_2025")
DASHBOARD_PATH = os.path.join(TRADING_BOT_DIR, "dashboard_trading_pro.py")
WORKING_DASHBOARD_PATH = os.path.join(TRADING_BOT_DIR, "dashboard_trading_fonctionnel.py")

# Cl√©s API fonctionnelles (originales)
API_KEY_FONCTIONNELLE = "08d4759c-8572-4224-a3c8-6a63cf877fd6"
PRIVATE_KEY_FONCTIONNELLE = """-----BEGIN EC PRIVATE KEY-----
MHcCAQEEIDdqwLclidk5lL0hF0rev6nDBBZFQYBjbs4r+ZdqqdZPoAoGCCqGSM49
AwEHoUQDQgAEFpDQesMVJlwz1CA5dgfDDfvigRXUimALaJE7bn6Hn8WNDMkGasds
Wqk/bwMFJGkLuyeXWMIUyMZFbuwVpptwNg==
-----END EC PRIVATE KEY-----"""

def create_backup(file_path):
    """Cr√©e une sauvegarde du fichier"""
    backup_path = f"{file_path}.bak.{datetime.now().strftime('%Y%m%d%H%M%S')}"
    shutil.copy2(file_path, backup_path)
    print(f"‚úÖ Sauvegarde cr√©√©e: {backup_path}")
    return backup_path

def create_working_dashboard():
    """Cr√©e une version du dashboard avec les cl√©s fonctionnelles"""
    print("\nüìä Cr√©ation du dashboard avec les cl√©s fonctionnelles...")
    
    # Lire le contenu du dashboard original
    with open(DASHBOARD_PATH, 'r') as f:
        content = f.read()
    
    # Modifier la m√©thode setup_exchange pour utiliser les cl√©s fonctionnelles
    import re
    exchange_pattern = r'def setup_exchange\(self\):(.*?)try:(.*?)private_key = """.*?"""(.*?)\'apiKey\': \'.*?\''
    
    # Cr√©er le remplacement
    replacement = f"""def setup_exchange(self):\\1try:\\2private_key = \"\"\"-----BEGIN EC PRIVATE KEY-----
MHcCAQEEIDdqwLclidk5lL0hF0rev6nDBBZFQYBjbs4r+ZdqqdZPoAoGCCqGSM49
AwEHoUQDQgAEFpDQesMVJlwz1CA5dgfDDfvigRXUimALaJE7bn6Hn8WNDMkGasds
Wqk/bwMFJGkLuyeXWMIUyMZFbuwVpptwNg==
-----END EC PRIVATE KEY-----\"\"\"\\3'apiKey': '08d4759c-8572-4224-a3c8-6a63cf877fd6'"""
    
    # Effectuer le remplacement
    modified_content = re.sub(exchange_pattern, replacement, content, flags=re.DOTALL)
    
    # V√©rifier si le remplacement a √©t√© effectu√©
    if modified_content == content:
        print("‚ùå √âchec de la modification des cl√©s API dans le dashboard")
        return False
    
    # Ajouter un commentaire pour indiquer la modification
    header_comment = """#!/usr/bin/env python3
\"\"\"
üöÄ TRADING BOT PRO DASHBOARD - Version Professionnelle avec cl√©s fonctionnelles
Multiple strat√©gies, gestion des risques, interface avanc√©e avec IA avanc√©e
Version restaur√©e automatiquement le {}
\"\"\"
""".format(datetime.now().strftime('%d/%m/%Y √† %H:%M'))
    
    modified_content = re.sub(r'#!/usr/bin/env python3.*?""".*?"""', header_comment, modified_content, flags=re.DOTALL)
    
    # √âcrire le contenu modifi√©
    with open(WORKING_DASHBOARD_PATH, 'w') as f:
        f.write(modified_content)
    
    # Rendre le fichier ex√©cutable
    os.chmod(WORKING_DASHBOARD_PATH, 0o755)
    
    print("‚úÖ Dashboard avec cl√©s fonctionnelles cr√©√© avec succ√®s!")
    return True

def create_launcher_script():
    """Cr√©e un script de lancement pour le dashboard avec cl√©s fonctionnelles"""
    print("\nüìú Cr√©ation du script de lancement...")
    
    launcher_path = os.path.join(PROJECT_DIR, "LANCER_PORTFOLIO_FONCTIONNEL.command")
    
    launcher_content = """#!/bin/bash

# LANCEUR DU PORTFOLIO COINBASE FONCTIONNEL
# Cr√©√© automatiquement le {}

# Chemins
PROJET_DIR="/Users/johan/ia_env/bot-trading-"
TRADING_BOT_DIR="$PROJET_DIR/TradingBot_Pro_2025"
ENV_PATH="/Users/johan/ia_env/bin/activate"
DASHBOARD="$TRADING_BOT_DIR/dashboard_trading_fonctionnel.py"

# Nettoyer les processus existants
pkill -f "python.*dashboard.*\.py" >/dev/null 2>&1 || true
lsof -ti:8088 | xargs kill -9 >/dev/null 2>&1 || true
sleep 1

clear
echo "üöÄ LANCEUR DE DASHBOARD AVEC CL√âS COINBASE FONCTIONNELLES"
echo "======================================================"
echo ""
echo "‚è≥ Pr√©paration de l'environnement..."

# Activation environnement
cd "$TRADING_BOT_DIR"
source "$ENV_PATH" || {{
  osascript -e 'display dialog "Erreur: Environnement Python non trouv√©" buttons {{"OK"}} default button "OK" with icon stop'
  exit 1
}}

# Afficher notification
osascript -e 'display notification "D√©marrage du dashboard avec cl√©s fonctionnelles" with title "TradingBot Pro" sound name "Submarine"'

# Lancer navigateur dans 4 secondes
(sleep 4 && open "http://localhost:8088") &

echo "‚úÖ Environnement activ√©"
echo "üìä Lancement du dashboard avec les cl√©s fonctionnelles..."
echo "üåê URL: http://localhost:8088 (s'ouvrira automatiquement)"
echo ""
echo "‚ö†Ô∏è IMPORTANT: Cette version utilise les anciennes cl√©s API qui"
echo "   fonctionnaient correctement, sauvegard√©es dans:"
echo "   $PROJET_DIR/cles_coinbase_fonctionnelles.txt"
echo ""

# Lancer le dashboard fonctionnel
python "$DASHBOARD" --full-features --portfolio-live --enable-api --debug
""".format(datetime.now().strftime('%d/%m/%Y √† %H:%M'))
    
    # √âcrire le contenu
    with open(launcher_path, 'w') as f:
        f.write(launcher_content)
    
    # Rendre le script ex√©cutable
    os.chmod(launcher_path, 0o755)
    
    # Copier sur le bureau
    desktop_path = os.path.expanduser("~/Desktop/LANCER_PORTFOLIO_FONCTIONNEL.command")
    shutil.copy2(launcher_path, desktop_path)
    os.chmod(desktop_path, 0o755)
    
    print(f"‚úÖ Script de lancement cr√©√©: {launcher_path}")
    print(f"‚úÖ Script copi√© sur le bureau: {desktop_path}")
    return True

def main():
    """Fonction principale"""
    print("\nüîÑ RESTAURATION DES CL√âS API COINBASE FONCTIONNELLES")
    print("===================================================\n")
    
    # V√©rifier si le fichier dashboard existe
    if not os.path.exists(DASHBOARD_PATH):
        print(f"‚ùå Erreur: Le fichier {DASHBOARD_PATH} n'existe pas!")
        return False
    
    # Cr√©er une sauvegarde du fichier dashboard original
    create_backup(DASHBOARD_PATH)
    
    # Cr√©er le dashboard avec les cl√©s fonctionnelles
    if not create_working_dashboard():
        print("‚ùå √âchec de la cr√©ation du dashboard fonctionnel!")
        return False
    
    # Cr√©er le script de lancement
    if not create_launcher_script():
        print("‚ùå √âchec de la cr√©ation du script de lancement!")
        return False
    
    print("\n‚ú® RESTAURATION TERMIN√âE AVEC SUCC√àS ‚ú®")
    print("Utilisez le script LANCER_PORTFOLIO_FONCTIONNEL.command")
    print("sur votre bureau pour d√©marrer le dashboard.")
    print("Les cl√©s API fonctionnelles ont √©t√© sauvegard√©es dans:")
    print(f"{PROJECT_DIR}/cles_coinbase_fonctionnelles.txt")
    print("===================================================\n")
    return True

if __name__ == "__main__":
    main()
